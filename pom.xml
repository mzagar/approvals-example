<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>approvals-test</groupId>
    <artifactId>approvals-test</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <jackson.version>2.1.4</jackson.version>
        <approvals.version>0.13</approvals.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
        </dependency>

        <dependency>
            <groupId>com.github.approvals</groupId>
            <artifactId>ApprovalTests</artifactId>
            <version>${approvals.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-guava</artifactId>
            <version>2.1.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>ApprovalTests</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/lib/ApprovalTests-${approvals.version}.jar</file>
                            <groupId>com.github.approvals</groupId>
                            <artifactId>ApprovalTests</artifactId>
                            <version>${approvals.version}</version>
                            <packaging>jar</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <!--

        *** Using addjars-maven-plugin breaks ApprovalTests library (source file location cannot
        *** be termined by ApprovalTests when 'mvn test' is executed, e.g. from command line.
        *** Because of this issue, I use maven-install-plugin to force installing custom jar from lib/ folder
        *** to local repository in maven 'initialize' phase.
        *** Maven command line looks like this: 'mvn clean initialize test'.

        <build>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.addjars-maven-plugin</groupId>
                    <artifactId>addjars-maven-plugin</artifactId>
                    <version>1.0.5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>add-jars</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${basedir}/lib</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    -->

</project>